# Allows you to create your own dynamic keys
# to be called in localization.
# defined_text -> this is it, we're defining the text
# text -> a discrete entry that can be picked to display in loc.
# trigger -> determines if a text entry will be picked or not.
# (The triggers need to be valid for the scope the key is called in
# (eg Root or From.From).)
# localization_key -> points to the localization key
# that'll be used if trigger passes


defined_text = {
	name = GetSenateElectionOutcome
	text = {
		trigger = {
			check_variable = { senators_for_reelection < 0 }
		}
		localization_key = SenateElectionLost
	}
	text = {
		trigger = {
			check_variable = { var = senators_for_reelection value = 0 compare = greater_than_or_equals }
		}
		localization_key = SenateElectionGained
	}
}
defined_text = {
	name = GetHouseElectionOutcome
	text = {
		trigger = {
			check_variable = { representatives_for_reelection < 0 }
		}
		localization_key = HouseElectionLost
	}
	text = {
		trigger = {
			check_variable = { var = representatives_for_reelection value = 0 compare = greater_than_or_equals }
		}
		localization_key = HouseElectionGained
	}
}
defined_text = { 
	name = GetCSAState
	text = {
		random_list = {
			10 = { localization_key = STATE_362 }
			10 = { localization_key = STATE_363 }
			10 = { localization_key = STATE_364 }
			10 = { localization_key = STATE_365 }
			10 = { localization_key = STATE_366 }
			10 = { localization_key = STATE_367 }
			10 = { localization_key = STATE_368 }
		}
	}
}
defined_text = {
	name = GETUSASTATE
	text = {
		random_list = {
			10 = { localization_key = STATE_382 }
			10 = { localization_key = STATE_383 }
			10 = { localization_key = STATE_384 }
			10 = { localization_key = STATE_389 }
			10 = { localization_key = STATE_390 }
			10 = { localization_key = STATE_391 }
			10 = { localization_key = STATE_386 }
		}
	}
}

defined_text = {
	name = GETUKPROKINGNEWSPAPER
	text = {
		random_list = {
			10 = { localization_key = eng_newspaper_daily_express }
			10 = { localization_key = eng_newspaper_daily_mail }
		}
	}
}

defined_text = {
	name = GETUKANTIKINGNEWSPAPER
	text = {
		random_list = {
			10 = { localization_key = eng_newspaper_the_times }
			10 = { localization_key = eng_newspaper_the_morning_post }
			10 = { localization_key = eng_newspaper_daily_herald }
			10 = { localization_key = eng_newspaper_the_daily_telegraph }
		}
	}
}

defined_text = { # Country
	name = GetCandidatesFascism
	text = {
		trigger = {
			has_global_flag = MTG_flag_955
		}
		localization_key = USA_hilt_candidate
	}
	text = {
		localization_key = ""
	}
}

defined_text = { # Country
	name = GetCandidatesFascism2
	text = {
		trigger = {
			has_completed_focus = USA_send_lindbergh_to_germany
		}
		localization_key = USA_lindbergh_candidate
	}
	text = {
		localization_key = ""
	}
}


defined_text = { # Country
	name = GetStresaMembers
	text = {
		trigger = {
			has_global_flag = LaR_Britain_Stresa_Concessions
		}
		localization_key = LaR_Britain_Stresa_agreed
	}
	text = {
		trigger = {
			NOT = { has_global_flag = LaR_Britain_Stresa_Concessions }
		}
		localization_key = LaR_Britain_Stresa_refused
	}
}

defined_text = { # Country
	name = GetStresaConcessions
	text = {
		trigger = {
			has_global_flag = LaR_Britain_Stresa_Concessions
		}
		localization_key = LaR_Britain_Stresa_Concessions
	}
	text = {
		trigger = {
			NOT = { has_global_flag = LaR_Britain_Stresa_Concessions }
		}
		localization_key = LaR_France_Stresa_Confessions
	}
}

defined_text = { # Country
	name = GetFrenchCoronationCity
	text = {
		trigger = {
			has_completed_focus = FRA_the_legitimate_heir
		}
		localization_key = LaR_France_Reims
	}
	text = {
		trigger = {
			OR = {
				has_completed_focus = FRA_proclaim_the_third_empire
				has_completed_focus = FRA_orleanist_restoration
			}
		}
		localization_key = LaR_France_Paris
	}
}

defined_text = { # Country
	name = GetFrenchRoyalTitle
	text = {
		trigger = {
			has_completed_focus = FRA_the_legitimate_heir
		}
		localization_key = LaR_France_King
	}
	text = {
		trigger = {	
			has_completed_focus = FRA_orleanist_restoration
		}
		localization_key = LaR_France_King_of_The_French
	}
	text = {
		trigger = {	
			has_completed_focus = FRA_proclaim_the_third_empire
		}
		localization_key = LaR_France_Emperor
	}
}

defined_text = {
	name = GetIberianSummitReceiverName

	text = {	#A Spanish Tag is sending the proposal to Portugal
		localization_key = POR_Iberian_Summit_Receiver_Portugal
	}
}

defined_text = {
	name = GetSpanishRepublicFlagAndNameDef
	text = {	#Gets tag from SPD (once SCW has started)
		trigger = { 
			country_exists = SPD
		}
		localization_key = POR_Spanish_Republic_SPD
	}
	text = {	#Gets tag from SPR (before SCW starts)
		localization_key = POR_Spanish_Republic_SPR
	}
}

defined_text = {
	name = GetPortugueseShipsBuilder
	text = { #ENG builder
		trigger = {
			OR = {
				has_country_flag = POR_purchase_british_submarines_flag
				has_country_flag = POR_purchase_british_destroyers_flag
				has_country_flag = POR_purchase_british_light_cruiser_flag
			}
		}
		localization_key = POR_ENG_Ship_Builder
	}
	text = { #ITA builder
		localization_key = POR_ITA_Ship_builder
	}
}

defined_text = {
	name = GetWargoalBasedOnGovernment
	text = { #United Kingdom of Portugal and Brazil 
		trigger = {
			has_cosmetic_tag = KPB_kingdom_portugal_and_brazil
		}
		localization_key = POR_puppet_wargoal
	}
	text = { #Salazarist Portugal
		trigger = {
			NOT = { has_cosmetic_tag = KPB_kingdom_portugal_and_brazil }
			has_government = neutrality
		}
		localization_key = POR_topple_government_wargoal
	}
	text = { #Fascist (else)
		localization_key = POR_annex_wargoal
	}
}